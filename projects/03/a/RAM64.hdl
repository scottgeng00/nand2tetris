// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, a=l0, b=l1, c=l2, d=l3, e=l4, f=l5, g=l6, h=l7, sel=address[3..5]);
    RAM8(in=in, load=l0, out=r0, address=address[0..2]);
    RAM8(in=in, load=l1, out=r1, address=address[0..2]);
    RAM8(in=in, load=l2, out=r2, address=address[0..2]);
    RAM8(in=in, load=l3, out=r3, address=address[0..2]);
    RAM8(in=in, load=l4, out=r4, address=address[0..2]);
    RAM8(in=in, load=l5, out=r5, address=address[0..2]);
    RAM8(in=in, load=l6, out=r6, address=address[0..2]);
    RAM8(in=in, load=l7, out=r7, address=address[0..2]);
	Mux8Way16(a=r0, b=r1, c=r2, d=r3, e=r4, f=r5, g=r6, h=r7, sel=address[3..5], out=out); 
}